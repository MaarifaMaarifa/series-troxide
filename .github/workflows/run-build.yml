name: Run Build

on:
  workflow_call:

jobs:
  ubuntu:
    # strategy:
    #   matrix:
    #     target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: apt update
        run: sudo apt update

      - name: installing libgtk-3-dev (rfd crate dependency)
        run: sudo apt install libgtk-3-dev

      # - name: installing mingw-w64
      #   if: matrix.target== 'x86_64-pc-windows-gnu'
      #   run: sudo apt install mingw-w64

      - name: Cache setup
        uses: Swatinem/rust-cache@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      # - name: Set target windows target
      #   if: matrix.target== 'x86_64-pc-windows-gnu'
      #   run: rustup target add x86_64-pc-windows-gnu

      - name: Run build
        uses: actions-rs/cargo@v1
        with:
            command: build        
            # args: --target ${{ matrix.target }}

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc, x86_64-pc-windows-gnu]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache setup
        uses: Swatinem/rust-cache@v2

      - name: Run build
        uses: actions-rs/cargo@v1
        with:
            command: build
            args: --target ${{ matrix.target }}

  macos-build:
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache setup
        uses: Swatinem/rust-cache@v2

      - name: Run build
        uses: actions-rs/cargo@v1
        with:
            command: build
            args: --target ${{ matrix.target }}

          

  
